name: CI
on: [push]

# Automatically stop old builds on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -el {0}

env:
  CONDA_CHANNEL_UPLOAD_USER: ${{ secrets.CONDA_CHANNEL_UPLOAD_USER }}
  CONDA_CHANNEL_UPLOAD_PASSWORD: ${{ secrets.CONDA_CHANNEL_UPLOAD_PASSWORD }}
  CONDA_API_KEY: ${{ secrets.QUETZ_API_KEY }}

jobs:
  linux-unittests:
    name: "Linux - unit tests - Python ${{ matrix.PYTHON_VERSION }}"
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.8', '3.9', '3.10']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3.3.0
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch full git history
        run: git fetch --prune --unshallow
      - name: Set up Conda env
        uses: mamba-org/provision-with-micromamba@f347426e5745fe3dfc13ec5baf20496990d0281f
        with:
          condarc-file: .github/workflows/.condarc
          cache-env: true
          extra-specs: |
            python=${{ matrix.PYTHON_VERSION }}
            pytest-md
            pytest-emoji
      - name: Install repository
        run: python -m pip install --no-build-isolation --no-deps --disable-pip-version-check -e .
      - name: Checkout Quantco/pytest-action
        uses: actions/checkout@v3.3.0
        with:
          repository: Quantco/pytest-action
          ref: v2
          token: ${{ secrets.FQ_GH_TOKEN }}
          path: .github/pytest-action
      - name: Run unittests
        uses: ./.github/pytest-action
        with:
          report-title: "Unit tests Linux - Python ${{ matrix.PYTHON_VERSION }}"
          custom-arguments: --cov-report=xml ./tests
  docs:
    name: "Documentation - build & upload"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      id-token: write
    strategy:
      fail-fast: false
    steps:
      - name: Docker login
        run: docker login ghcr.io -u "${{ github.actor }}" -p "${{ secrets.GITHUB_TOKEN }}"
      - name: Pull image
        run: docker pull ghcr.io/quantco/qc-mambaforge-base:latest
      - name: Checkout branch
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v3.3.0
      - name: Checkout plain HEAD commit
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3.3.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Fetch full git history
        run: git fetch --prune --unshallow
      - name: Checkout github-actions repo
        uses: actions/checkout@v3.3.0
        with:
          repository: Quantco/github-actions
          ref: main
          token: ${{ secrets.FQ_GH_TOKEN }}
          path: .github/quantco-actions
      - uses: google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: "projects/610600912298/locations/global/workloadIdentityPools/doqker-devel-github-actions-pool/providers/github-actions-provider"
          service_account: 'sa-github-actions@doqker-devel.iam.gserviceaccount.com'
          token_format: 'access_token'
      - uses: google-github-actions/setup-gcloud@v1.0.1
        with:
          version: '408.0.0'
          project_id: ${{ secrets.GCP_UPLOAD_PROJECT_ID }}
          export_default_credentials: true
      - name: Run doc build inside of container
        uses: ./.github/quantco-actions/docs
        with:
          conda_api_key: "${{ secrets.QUETZ_API_KEY }}"
      - name: Publish Docs
        if: ${{ github.event_name != 'pull_request' }}
        run: cd docs/_build/html && gsutil -m cp -r * gs://qc-github-artifacts/${GITHUB_REPOSITORY}/${GITHUB_SHA}/
      - name: Publish Docs
        if: ${{ github.event_name == 'pull_request' }}
        run: cd docs/_build/html && gsutil -m cp -r * gs://qc-github-artifacts/${GITHUB_REPOSITORY}/${{ github.event.pull_request.head.sha }}/
      - name: Publish Docs as latest
        run: cd docs/_build/html && gsutil -m cp -r * gs://qc-github-artifacts/${GITHUB_REPOSITORY}/latest/
        if: github.ref == 'refs/heads/main'

  pre-commit-checks:
    name: "Linux - pre-commit checks - Python 3.8"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3.3.0
        with:
          ref: ${{ github.head_ref }}
      - name: Install Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0

  linux-conda-build:
    name: "Linux - conda-build - Python ${{ matrix.PYTHON_VERSION }}"
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.8']
    steps:
      - name: Docker login
        run: docker login ghcr.io -u "${{ github.actor }}" -p "${{ secrets.GITHUB_TOKEN }}"
      - name: Pull image
        run: docker pull ghcr.io/quantco/qc-mambaforge-base:latest
      - name: Checkout branch
        uses: actions/checkout@v3.3.0
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch full git history
        run: git fetch --prune --unshallow
      - name: Checkout github-actions repo
        uses: actions/checkout@v3.3.0
        with:
          repository: Quantco/github-actions
          ref: main
          token: ${{ secrets.FQ_GH_TOKEN }}
          path: .github/quantco-actions
      - name: Run conda-build inside of container
        uses: ./.github/quantco-actions/conda-build
        with:
          python_version: ${{ matrix.PYTHON_VERSION }}
          conda_api_key: "${{ secrets.QUETZ_API_KEY }}"
